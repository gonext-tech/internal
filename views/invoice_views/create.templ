package invoice_views

import (
"github.com/gonext-tech/internal/functions"
"github.com/gonext-tech/internal/models"
"github.com/gonext-tech/internal/views/components"
"strconv"
)

templ Create(projects []models.Project) {
<section class=" bg-base-200 rounded-md relative">
  @components.BackButton("invoice")
  <div class="py-8 px-4 mx-auto max-w-2xl lg:py-16">
    <h2 class="mb-4 text-xl font-bold text-gray-900 dark:text-white">Add new shop</h2>
    <form action="" method="post" hx-swap="transition:true" hx-encoding="multipart/form-data"
      hx-on::before-send="modifyForm(event)">
      <div class="grid gap-4 grid-cols-3 sm:gap-6 mb-4">
        <div>
          <label for="amount" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Amount</label>
          <input type="number" name="amount" id="amount"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="$10.00" required="" onchange="handleAmount(event);" />
        </div>
        <div>
          <label for="discount" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Discount</label>
          <input type="number" name="discount" id="discount"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="$10.00" required="" onchange="handleAmount(event);" />
        </div>
        <div>
          <label for="total" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Total amount</label>
          <input type="number" name="total" id="total"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500 cursor-not-allowed"
            required="" readonly />
        </div>
      </div>
      <div class="grid gap-4 sm:grid-cols-2 sm:gap-6">
        <div>
          <label for="invoice_type" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Type</label>
          <select id="invoice_type" name="invoice_type"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
            <option value="" selected disabled>Select type</option>
            <option value="PAYIN">Payin</option>
            <option value="PAYOUT">Pay out</option>
          </select>
        </div>
        <div>
          <label for="category" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>
          <select id="category" name="category"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
            <option value="" selected disabled>Select Category</option>
            <option value="DOMAIN">Domain</option>
            <option value="SERVER">Server</option>
            <option value="PAYMENT">Payment</option>
            <option value="Salary">Salary</option>
            <option value="Expenses">Expenses</option>
          </select>
        </div>
        @components.SelectClient()
        <div>
          <label for="invoice_date" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Issue Date
          </label>
          <input value={ functions.GetToday() } type="date" name="issue_date" id="issue_date"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="" required />
        </div>
        <div>
          <label for="due_date" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Due Date
          </label>
          <input type="date" name="due_date" id="due_date"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="" required />
        </div>
        <div>
          <label for="project_id" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Project</label>
          <select id="project_id" name="project_id"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
            <option disabled selected>Select project</option>
            for _, project := range projects {
            <option value={ strconv.Itoa(int(project.ID)) }>
              { project.Name }
            </option>
            }
          </select>
        </div>
        <div>
          <label for="recurring" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Recurring
          </label>
          <input class="toggle toggle-primary" name="recurring" id="recurring" type="checkbox"
            onchange="checkboxChange(this)" />
        </div>
        <div id="recurring_period_div" class={ "sm:col-span-2 hidden" }>
          <label for="recurring_period" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Recurring Period
          </label>
          <input id="recurring_period" name="recurring_period" type="number"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="1 month" />
        </div>
        <div id="description">
          <label for="notes" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Notes
          </label>
          <textarea id="notes" name="notes" rows="5"
            class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="Enter invoice notes..."></textarea>
        </div>
        <div id="description">
          <label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Description
          </label>
          <textarea id="description" name="description" rows="5"
            class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="Enter invoice description..."></textarea>
        </div>
      </div>
      <button type="submit"
        class="mt-6 inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 bg-blue-600 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:shadow-outline focus:outline-none">
        Add Invoice
      </button>
    </form>
  </div>
</section>
<script>
  function modifyForm(event) {
    const formData = event.detail.requestConfig.parameters;
    const checkbox = document.getElementById('recurring');
    const issueDate = document.getElementById('issue_date')
    const dueDate = document.getElementById('due_date')
    if (issueDate.value) {
      const isoDate = new Date(issueDate.value).toISOString();
      formData.issue_date = isoDate
    } else {
      formData.issue_date = null
    }
    if (dueDate.value) {
      const isoDate = new Date(dueDate.value).toISOString();
      formData.due_date = isoDate
    } else {
      formData.due_date = null
    }
    if (!checkbox.checked) {
      formData.recurring = "false"; // Ensure "false" is sent if unchecked
    } else {
      formData.recurring = "true";
    }
  };
  function checkboxChange(event) {
    const recurringPeriod = document.getElementById('recurring_period_div');
    if (event.checked) {
      recurringPeriod.classList.remove('hidden');
    } else {
      recurringPeriod.classList.add('hidden')
    }
  };
  function handleAmount(event) {
    if (event.target.name == "amount") {
      const discount = document.getElementById('discount').value ?? 0
      const total = document.getElementById('total')
      total.value = event.target.value - discount
    } else {
      const amount = document.getElementById('amount').value ?? 0
      const total = document.getElementById('total')
      total.value = amount - event.target.value
    }

  }
</script>
}
