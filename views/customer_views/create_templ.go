// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package customer_views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/gonext-tech/internal/models"
	"github.com/gonext-tech/internal/views/components"
)

func Create(projects []models.Project) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<section class=\" bg-base-200 rounded-md relative\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.BackButton("customer").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"py-8 px-4 mx-auto max-w-2xl lg:py-16\"><h2 class=\"mb-4 text-xl font-bold text-gray-900 dark:text-white\">Add new customer</h2><form action=\"\" method=\"post\" hx-swap=\"transition:true\" hx-encoding=\"multipart/form-data\"><!--   Image upload START -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.UploadImage("", "customer").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!--   Image upload END--><!-- hidden  Image for backend --><input type=\"hidden\" id=\"image-url\" name=\"image\"><div class=\"grid gap-4 sm:grid-cols-2 sm:gap-6\"><div class=\"sm:col-span-2\"><label for=\"name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Name</label> <input type=\"text\" name=\"name\" id=\"name\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" placeholder=\"Customer 1\" required=\"\"></div><div><label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Email</label> <input type=\"email\" name=\"email\" id=\"email\" autocomplete=\"off\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" placeholder=\"example@example.com\" required=\"\"></div><div><label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Password </label><div class=\"inline-flex items-center relative w-full\"><button tabindex=\"-1\" type=\"button\" onclick=\"togglePassword()\" class=\"btn btn-ghost btn-sm btn-circle absolute right-0 mr-2\"><i id=\"eyeIcon\" class=\"fa-solid fa-eye text-lg\"></i></button> <input id=\"password\" name=\"password\" type=\"password\" placeholder=\"keep it secret\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"></div></div><div><label for=\"phone\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Phone</label> <input type=\"text\" name=\"phone\" id=\"phone\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" placeholder=\"961 123456\"></div><div><label for=\"project_name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Project</label> <select id=\"project_name\" name=\"project_name\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"><option disabled selected>Select project</option> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, project := range projects {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(project.Name))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(project.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/customer_views/create.templ`, Line: 55, Col: 28}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</select></div><div class=\"w-full\"><label for=\"shop\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Shop</label> <input type=\"number\" name=\"shop_id\" class=\"hidden\" id=\"shop_id\"><div class=\"dropdown w-full\"><div tabindex=\"0\" role=\"button\"><input class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" type=\"search\" name=\"searchTerm\" id=\"shop-search-input\" placeholder=\"Search by title...\" hx-get=\"/shop/search\" hx-trigger=\"input changed delay:500ms, search\" hx-target=\"#shop-results\" hx-swap=\"transition:false\" hx-include=\"#project_name\" autocomplete=\"off\"></div><ul tabindex=\"0\" id=\"shop-results\" class=\"dropdown-content mt-2 z-[1] menu p-2 shadow bg-base-100 rounded-md  w-full\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ShopResult([]models.Shop{}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></div><div><label for=\"status\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Status</label> <select id=\"status\" name=\"status\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"><option value=\"\" selected disabled>Select Status</option> <option value=\"ACTIVE\">Active</option> <option value=\"NOT_ACTIVE\">Not Active</option></select></div><div><label for=\"role\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Role</label> <select id=\"role\" name=\"role\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"><option value=\"\" selected disabled>Select role</option> <option value=\"ADMIN\">Admin</option> <option value=\"OWNER\">Owner</option> <option value=\"USER\">User</option></select></div><div class=\"sm:col-span-2\"><label for=\"address\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Address</label> <textarea id=\"address\" name=\"address\" rows=\"3\" class=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" placeholder=\"Address\"></textarea></div></div><button type=\"submit\" class=\"mt-6 inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 bg-blue-600 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:shadow-outline focus:outline-none\">Add Customer</button></form></div></section><script>\n  function togglePassword() {\n    const passwordInput = document.getElementById('password');\n    const eyeIcon = document.getElementById('eyeIcon');\n\n    if (passwordInput.type === 'password') {\n      passwordInput.type = 'text';\n      eyeIcon.classList.remove('fa-eye');\n      eyeIcon.classList.add('fa-eye-slash');\n    } else {\n      passwordInput.type = 'password';\n      eyeIcon.classList.remove('fa-eye-slash');\n      eyeIcon.classList.add('fa-eye');\n    }\n  }\n  //TODO --> HANDLE UPLOAD IMAGE <--\n  function handleImageUploadResponse(event) {\n    const response = JSON.parse(event.detail.xhr.responseText);\n    const imagePreviews = document.getElementById('image-previews');\n    const imageInput = document.getElementById('image-url');\n    console.log(\"responseeee\", response)\n    response.data.forEach(imageUrl => {\n      // Create image element and append to image previews\n      const img = document.createElement('img');\n      img.src = imageUrl;\n      img.classList.add('w-20', 'h-20', 'rounded-full');\n      img.alt = 'customer-image';\n      imagePreviews.appendChild(img);\n\n      // Add image URL to hidden input\n      const hiddenInput = document.createElement('input');\n      hiddenInput.type = 'hidden';\n      hiddenInput.name = 'image';\n      hiddenInput.value = imageUrl;\n      imageInput.value = imageUrl\n    });\n  }\n\n\n\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
