package customer_views

import (
	"github.com/gonext-tech/internal/models"
	"github.com/gonext-tech/internal/views/components"
)

templ Create(projects []models.Project) {
	<section class=" bg-base-200 rounded-md relative">
		@components.BackButton("customer")
		<div class="py-8 px-4 mx-auto max-w-2xl lg:py-16">
			<h2 class="mb-4 text-xl font-bold text-gray-900 dark:text-white">Add new customer</h2>
			<form
				id="image-upload-form"
				hx-post="https://internal.gonext.tech/api/uploads"
				hx-trigger="change"
				enctype="multipart/form-data"
				hx-on::after-request="handleImageUploadResponse(event)"
			>
				<label for="image">Upload Image:</label>
				<input type="file" id="image" name="image" accept="image/*"/>
				<input type="hidden" id="main-image-url"/>
				<input type="hidden" id="folder" name="folder" value="customers"/>
				<input type="hidden" id="domain" name="domain" value="support"/>
			</form>
			<!-- Container for Image Preview -->
			<div id="image-previews"></div>
			<form action="" method="post" hx-swap="transition:true">
				<!-- hidden  Image for backend -->
				<input type="hidden" id="image-url" name="image"/>
				<div class="grid gap-4 sm:grid-cols-2 sm:gap-6">
					<div class="sm:col-span-2">
						<label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Name</label>
						<input
							type="text"
							name="name"
							id="name"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
							placeholder="Customer 1"
							required=""
						/>
					</div>
					<div>
						<label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
						<input
							type="email"
							name="email"
							id="email"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
							placeholder="example@example.com"
							required=""
						/>
					</div>
					<div>
						<label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password </label>
						<div class="inline-flex items-center relative w-full">
							<button
								tabindex="-1"
								type="button"
								onclick="togglePassword()"
								class="btn btn-ghost btn-sm btn-circle absolute right-0 mr-2"
							>
								<i id="eyeIcon" class="fa-solid fa-eye text-lg"></i>
							</button>
							<input
								id="password"
								name="password"
								type="password"
								placeholder="keep it secret"
								class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
							/>
						</div>
					</div>
					<div>
						<label for="phone" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Phone</label>
						<input
							type="text"
							name="phone"
							id="phone"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
							placeholder="961 123456"
						/>
					</div>
					<div>
						<label for="project_name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Project</label>
						<select
							id="project_name"
							name="project_name"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						>
							<option disabled selected>Select project</option>
							for _, project := range projects {
								<option value={ project.Name }>
									{ project.Name }
								</option>
							}
						</select>
					</div>
					<div class="w-full">
						<label for="shop" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Shop</label>
						<input type="number" name="shop_id" class="hidden" id="shop_id"/>
						<div class="dropdown w-full">
							<div tabindex="0" role="button">
								<input
									class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
									type="search"
									name="searchTerm"
									id="shop-search-input"
									placeholder="Search by title..."
									hx-get="/shop/search"
									hx-trigger="input changed delay:500ms, search"
									hx-target="#shop-results"
									hx-include="#project_name"
									autocomplete="off"
								/>
							</div>
							<ul
								tabindex="0"
								id="#shop-results"
								class="dropdown-content mt-2 z-[1] menu p-2 shadow bg-base-100 rounded-md  w-52"
							>
								@components.ShopResult([]models.Shop{})
							</ul>
						</div>
					</div>
					<div>
						<label for="status" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Status</label>
						<select
							id="status"
							name="status"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						>
							<option value="" selected disabled>Select Status</option>
							<option value="ACTIVE">Active</option>
							<option value="NOT_ACTIVE">Not Active</option>
						</select>
					</div>
					<div>
						<label for="role" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Role</label>
						<select
							id="role"
							name="role"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						>
							<option value="" selected disabled>Select role</option>
							<option value="ADMIN">Admin</option>
							<option value="OWNER">Owner</option>
							<option value="USER">User</option>
						</select>
					</div>
					<div class="sm:col-span-2">
						<label for="address" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Address</label>
						<textarea
							id="address"
							name="address"
							rows="3"
							class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
							placeholder="Address"
						></textarea>
					</div>
				</div>
				<button
					type="submit"
					class="mt-6 inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 bg-blue-600 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:shadow-outline focus:outline-none"
				>
					Add Customer
				</button>
			</form>
		</div>
	</section>
	<script>
  function togglePassword() {
    const passwordInput = document.getElementById('password');
    const eyeIcon = document.getElementById('eyeIcon');

    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      eyeIcon.classList.remove('fa-eye');
      eyeIcon.classList.add('fa-eye-slash');
    } else {
      passwordInput.type = 'password';
      eyeIcon.classList.remove('fa-eye-slash');
      eyeIcon.classList.add('fa-eye');
    }
  }
  //TODO --> HANDLE UPLOAD IMAGE <--
  function handleImageUploadResponse(event) {
    const response = JSON.parse(event.detail.xhr.responseText);
    const imagePreviews = document.getElementById('image-previews');
    const imageInput = document.getElementById('image-url');
    console.log("responseeee", response)
    response.data.forEach(imageUrl => {
      // Create image element and append to image previews
      const img = document.createElement('img');
      img.src = imageUrl;
      img.classList.add('w-20', 'h-20', 'rounded-full');
      img.alt = 'customer-image';
      imagePreviews.appendChild(img);

      // Add image URL to hidden input
      const hiddenInput = document.createElement('input');
      hiddenInput.type = 'hidden';
      hiddenInput.name = 'image';
      hiddenInput.value = imageUrl;
      imageInput.value = imageUrl
    });
  }

</script>
}
