package auth_views

import "github.com/ramyjaber1/internal/views/layout"

templ Login(fromProtected bool) {
	<section class="card w-fit bg-base-200 shadow-xl mx-auto mb-8">
		<div class="flex flex-col gap-4 rounded-box bg-base-200 p-6 max-w-md">
			<h1 class="text-3xl font-bold self-center">Log in</h1>
			<span class="self-center">
				Don't have an account?
				<a href="/register" class="link link-secondary">Register</a>
			</span>
			<form
				hx-swap="transition:true"
				hx-headers="js:{'X-TimeZone': Intl.DateTimeFormat().resolvedOptions().timeZone}"
				class="rounded-xl drop-shadow-xl flex flex-col gap-4 w-96 p-8"
				action=""
				method="post"
			>
				<a class="btn btn-neutral">
					<i class="fa-brands fa-google text-primary"></i>
					Log in with Google
				</a>
				<div class="divider">OR</div>
				<label class="form-control">
					<div class="label">
						<span class="label-text">Email</span>
					</div>
					<input
						name="email"
						class="input input-bordered"
						required
						autofocus
						disabled?={ fromProtected }
						if fromProtected {
							value="disabled"
						}
					/>
				</label>
				<label class="form-control">
					<div class="label">
						<span class="label-text">Password</span>
						<a class="label-text link link-accent">Forgot password?</a>
					</div>
					<input
						name="password"
						type="password"
						class="input input-bordered"
						required
						minlength="6"
						disabled?={ fromProtected }
						if fromProtected {
							value="disabled"
						}
					/>
				</label>
				<div class="form-control">
					<label class="cursor-pointer label self-start gap-2">
						<input type="checkbox" class="checkbox"/>
						<span class="label-text">Remember me</span>
					</label>
				</div>
				<button class="btn btn-primary" disabled?={ fromProtected }>Log in</button>
			</form>
		</div>
	</section>
}

templ LoginIndex(
    title,
    username string,
    fromProtected bool,
    isError bool,
	errMsgs, sucMsgs []string,
    cmp templ.Component,
    ) {
	@layout.Base(title, username, fromProtected, isError, errMsgs, sucMsgs) {
		@cmp
	}
}
