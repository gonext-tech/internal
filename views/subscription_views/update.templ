package subscription_views

import (
"fmt"
"github.com/gonext-tech/internal/models"
"github.com/gonext-tech/internal/views/components"
)

templ Update(subscription models.Subscription, projects []models.Project, memberships []models.Membership) {
<section class=" bg-base-200 rounded-md relative">
  @components.BackButton("subscription")
  <div class="py-8 px-4 mx-auto max-w-2xl lg:py-16">
    <h2 class="mb-4 text-xl font-bold text-gray-900 dark:text-white">Edit subscription</h2>
    <form action="" method="post" hx-swap="transition:true">
      <div class="grid gap-4 sm:grid-cols-2 sm:gap-6">
        <div class="sm:col-span-2">
          <label for="amount" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Amount</label>
          <input type="number" name="amount" id="amount" value={ fmt.Sprintf("%.2f", subscription.Amount) }
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="50" required="" />
        </div>
        <div>
          <label for="project" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Project</label>
          <select id="project_name" name="project_name" hx-get="/membership/fetch" hx-target="#membership_id"
            hx-swap={ "transition:false" } hx-trigger="change"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
            <option disabled>Select project</option>
            for _, project := range projects {
            <option value={ project.Name } selected?={ project.Name==subscription.ProjectName }>
              { project.Name }
            </option>
            }
          </select>
        </div>
        <div>
          <label for="membership_id"
            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Membership</label>
          <select id="membership_id" name="membership_id"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
            @components.MembershipResult(subscription.MembershipID, memberships)
          </select>
        </div>
        <div class="w-full">
          <label for="shop" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Shop</label>
          <input type="number" name="shop_id" value={ fmt.Sprintf("%d", subscription.ID) } class="hidden"
            id="shop_id" />
          <div class="dropdown w-full">
            <div tabindex="0" role="button">
              <input hx-swap={ "transition:false" }
                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                value={ subscription.Shop.Name } type="search" name="searchTerm" id="shop-search-input"
                placeholder="Search by title..." hx-get="/shop/search" hx-trigger="input changed delay:500ms, search"
                hx-target="#shop-results" hx-include="#project_name" autocomplete="off" />
            </div>
            <ul tabindex="0" id="shop-results"
              class="dropdown-content mt-2 z-[1] menu p-2 shadow bg-base-100 rounded-md  w-52">
              @components.ShopResult([]models.Shop{})
            </ul>
          </div>
        </div>
        <div>
          <label for="status" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Status</label>
          <select id="status" name="status"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
            <option value="" disabled>Select Status</option>
            <option value="ACTIVE" selected?={ subscription.Status=="ACTIVE" }>Active</option>
            <option value="NOT_ACTIVE" selected?={ subscription.Status=="NOT_ACTIVE" }>Not Active</option>
          </select>
        </div>
        <div>
          <label for="start_date" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Start
            Date
          </label>
          <input type="date" name="start_date" id="start_date" value={ subscription.StartDate.Format("2006-01-02") }
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="50" required="" />
        </div>
        <input type="date" class="hidden" name="next_billing_date" id="next_billing_date" value={
          subscription.EndDate.Format("2006-01-02") }
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          placeholder="50" required="" />
        <div>
          <label for="end_date" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">End Date</label>
          <input type="date" name="end_date" id="end_date"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="50" required="" value={ subscription.EndDate.Format("2006-01-02") } />
        </div>
        <div class="sm:col-span-2">
          <label for="address" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Notes</label>
          <textarea id="notes" name="notes" rows="3"
            class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="Address">{ subscription.Notes }</textarea>
        </div>
      </div>
      <button type="submit"
        class="mt-6 inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 bg-blue-600 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:shadow-outline focus:outline-none">
        Update Subscription
      </button>
    </form>
  </div>
</section>
<script>
  document.getElementById('membership_id').addEventListener('change', function () {
    const selectedOption = this.options[this.selectedIndex];
    const duration = parseInt(selectedOption.getAttribute('data-duration'), 10);

    if (!isNaN(duration)) {
      const today = new Date();
      const startDate = today.toISOString().split('T')[0]; // Format: YYYY-MM-DD

      // Calculate end date
      const endDate = new Date(today);
      endDate.setMonth(endDate.getMonth() + duration);
      const endDateFormatted = endDate.toISOString().split('T')[0];

      // Set the start and end dates in the input fields
      document.getElementById('start_date').value = startDate;
      document.getElementById('end_date').value = endDateFormatted;
      document.getElementById('next_billing_date').value = endDateFormatted;
    }
  });
</script>
}
